{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","duration","step","animationDuration","onNext","onPrev","containerWidth","carouselWidth","length","className","style","width","transform","transition","map","imageSrc","src","alt","at","type","onClick","App","state","infinite","stepFrame","lastFrame","setState","prevState","handleChange","event","currentTarget","name","value","checked","this","maxFrameSize","htmlFor","id","onChange","max","min","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79470d83.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  duration: number;\n  step: number;\n  animationDuration: number;\n  onNext: (step: number) => void;\n  onPrev: (step: number) => void;\n\n};\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  duration,\n  step,\n  animationDuration,\n  onNext,\n  onPrev,\n}) => {\n  const containerWidth = itemWidth * frameSize;\n  const carouselWidth = itemWidth * images.length;\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{ width: `${containerWidth}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translate(${duration}px`,\n            width: `${carouselWidth}px`,\n            transition: `transform ${animationDuration}ms ease-out`,\n          }}\n        >\n          {images.map(imageSrc => (\n            <li key={imageSrc}>\n              <img\n                style={{ width: `${itemWidth}px` }}\n                src={imageSrc}\n                alt={imageSrc.at(-5)}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => onPrev(step)}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => onNext(step)}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport Carousel from './components/Carousel';\nimport './App.scss';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  duration: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    duration: 0,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  onNext = (step: number) => {\n    const {\n      images, itemWidth, frameSize, duration, infinite,\n    } = this.state;\n    const stepFrame = step * itemWidth;\n    const lastFrame = frameSize * itemWidth - images.length * itemWidth;\n\n    if (duration <= lastFrame && !infinite) {\n      return;\n    }\n\n    if (duration <= lastFrame && infinite) {\n      this.setState({\n        duration: 0,\n      });\n\n      return;\n    }\n\n    this.setState((prevState) => ({\n      duration: prevState.duration - stepFrame,\n    }));\n  };\n\n  onPrev = (step: number) => {\n    const {\n      images, itemWidth, frameSize, duration, infinite,\n    } = this.state;\n    const stepFrame = step * itemWidth;\n    const lastFrame = frameSize * itemWidth - images.length * itemWidth;\n\n    if (duration === 0 && !infinite) {\n      return;\n    }\n\n    if (duration >= 0 && infinite) {\n      this.setState({\n        duration: lastFrame,\n      });\n\n      return;\n    }\n\n    this.setState((prevState) => ({\n      duration: prevState.duration + stepFrame,\n    }));\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, type, checked,\n    } = event.currentTarget;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : value,\n      duration: 0,\n    }));\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, duration, step, animationDuration, infinite,\n    } = this.state;\n\n    const maxFrameSize = images.length / 2;\n\n    return (\n      <div className=\"App\">\n\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          duration={duration}\n          step={step}\n          animationDuration={animationDuration}\n          onNext={this.onNext}\n          onPrev={this.onPrev}\n        />\n\n        <div className=\"Abilities\">\n          <div>\n            <label htmlFor=\"itemWidth\">ItemWidth</label>\n            <input\n              name=\"itemWidth\"\n              id=\"itemWidth\"\n              type=\"number\"\n              value={itemWidth}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"frameSize\">FrameSize</label>\n            <input\n              name=\"frameSize\"\n              id=\"frameSize\"\n              type=\"number\"\n              value={frameSize}\n              max={maxFrameSize}\n              min={1}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"step\">Step</label>\n            <input\n              name=\"step\"\n              id=\"step\"\n              type=\"number\"\n              value={step}\n              max={frameSize}\n              min={1}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"animationDuration\">AnimationDuration</label>\n            <input\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              type=\"number\"\n              step=\"100\"\n              value={animationDuration}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"infinite\">Infinite</label>\n            <input\n              name=\"infinite\"\n              id=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}